from agent.base import Agent
from model.base import ChatModel
from typing import List

PROMPT = """You are a Web Security Scanning Assistant with knowledge of penetration testing and analytical skills.
Your job is to provide answers based on the user's requirements and data. User requirements will be given in the format [user input]xxxxx[user input end], and data will be provided in the format [data]xxxx[data end]. You need to respond using the format [result]xxx. Below is an example:

[data]

Hydra v9.2 (c) 2021 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).

Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2024-09-19 02:05:42
[DATA] max 1 task per 1 server, overall 1 task, 1 login try (l:1/p:1), ~1 try per task
[DATA] attacking http-get://10.12.189.59:11452/
[11452][http-get] host: 10.12.189.59 login: websds password: websds123
1 of 1 target successfully completed, 1 valid password found
Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2024-09-19 02:05:43

[data end]

[user input]
Please briefly analyze and summarize the output results of the Hydra tool above.

[user input end]
[result]
The Hydra tool successfully cracked the HTTP GET service of the target host (10.12.189.59:11452) in one attempt, identifying a valid username and password combination: websds/websds123.
Example complete. Below is a real application scenario:

[data]
{data}
[data end]

[user input]
{userinput}
[user input end]

[result]
"""



class AnalystAgent(Agent):

    def __init__(self, chat_model: ChatModel) -> None:
        self.chat_model = chat_model

    def process(self, query: List[str]) -> str:
        user_input, data = query
        prompt = PROMPT.format(data=data, userinput=user_input)
        return self.chat_model.chat(prompt)
