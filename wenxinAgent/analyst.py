from .WenxinBot import WenxinBot
from .QwenBot import QwenBot
from dotenv import dotenv_values
config = dotenv_values('.wenxinenv')
PROMPT = """你是一个Web安全扫描助手，你具有渗透测试的相关知识以及分析总结等能力。
你的工作是根据需求和数据给出回答，用户需求会以[user input]xxxxx[user input end]的形式给你，数据会以[data]xxxx[data end]的形式给你，你需要用[result]xxx的格式给出你的回答，下面给你一个例子：
[data]

Hydra v9.2 (c) 2021 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).

Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2024-09-19 02:05:42
[DATA] max 1 task per 1 server, overall 1 task, 1 login try (l:1/p:1), ~1 try per task
[DATA] attacking http-get://10.12.189.59:11452/
[11452][http-get] host: 10.12.189.59 login: websds password: websds123
1 of 1 target successfully completed, 1 valid password found
Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2024-09-19 02:05:43

[data end]

[user input]
请用简短的话分析总结上述hydra工具的输出结果

[user input end]
[result]
Hydra工具成功在一次尝试中破解了目标主机 (10.12.189.59:11452) 的HTTP GET服务，找到了有效的用户名和密码组合：websds/websds123。
例子完毕，下面是真实应用场景：

[data]
{$data$}
[data end]

[user input]
{$userinput$}
[user input end]

[result]
"""
class analyst:
    def __init__(self) -> None:
        # self.bot = WenxinBot()
        self.bot = QwenBot()
        # self.bot.get_access_token()
        self.prompt_template = PROMPT
    def make_prompt(self, query, data):
        prompt = self.prompt_template.replace("{$userinput$}", query)  # 替换 {$userinput$}
        prompt = prompt.replace("{$data$}", data)  # 在已经替换 {$userinput$} 的 prompt 上替换 {$data$}
        return prompt

    def query2bot(self, query, data):
        query = self.make_prompt(query, data)
        with open("analyst.txt", "a") as f:
            f.write(query)
        return self.bot.send_message(query)
