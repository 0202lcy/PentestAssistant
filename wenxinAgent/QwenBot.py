from dotenv import dotenv_values
config = dotenv_values('.qwenenv')

# def get_access_token(self):
#     url = config.get("token_url")
#     params = {"grant_type": "client_credentials", "client_id": self.API_KEY, "client_secret": self.SECRET_KEY}
#     self.access_token = str(requests.post(url, params=params).json().get("access_token"))


from openai import OpenAI
import json
import os


class QwenBot:
    def send_message(self, content):
        client = OpenAI(
            api_key=config.get("DASHSCOPE_API_KEY"), # 如果您没有配置环境变量，请在此处用您的API Key进行替换
            base_url="https://dashscope.aliyuncs.com/compatible-mode/v1",  # 填写DashScope服务的base_url
        )

        completion = client.chat.completions.create(
            model="qwen-plus",
            messages=[
                {'role': 'system', 'content': 'You are a helpful assistant.'},
                {'role': 'user', 'content': content}],
            temperature=0.8,
            top_p=0.8
            )
        result = completion.model_dump_json()
        # print("QwenBot result:", result)
        decoded_output = result.encode('utf-8').decode('unicode_escape')
        print("decoded_output:", decoded_output)
        return json.loads(result)


    def multi_round_test(self):
        while True:
            input_value = input("请输入问题（输入'quit'退出）: ")
            if input_value == 'quit':
                break
            else:
                
                self.send_message(input_value)


if __name__ == '__main__':
    bot = QwenBot()
    bot.multi_round_test()