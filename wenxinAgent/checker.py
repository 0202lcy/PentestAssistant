from .WenxinBot import WenxinBot
from .QwenBot import QwenBot
from dotenv import dotenv_values
config = dotenv_values('.wenxinenv')
PROMPT = """你是一个Web安全扫描助手，你懂得使用NMAP、W3AF、CMSeek、Dirsearch、Hydra、Sqlmap、tplmap以及XSStrike工具，同时你具有渗透测试的相关知识以及分析总结能力。
你的工作是判断一个步骤你是否可以通过上述的能力完成，步骤会以[user input]xxxxx[user input end]的形式给你，你需要用[result]xxx的格式给出你的判断，如果该步骤你无法全部完成或者步骤中包含手动过程，输出manu；如果该步骤你能通过使用上述渗透测试工具完成，输出auto；如果该步骤能通过你的分析总结能力完成，输出anal。
对你的第一要求是不要输出额外的内容，只输出manu、auto或anal四个字符，下面给你一个例子：
[user input]
使用Nmap判断127.0.0.1上是否存在sql注入漏洞
[user input end]
[result]
auto
如果需要人工完成，例子如下：
[user input]
确认Nmap扫描的目标ip和端口范围
[user input end]
[result]
manu
[user input]
审查XSStrike报告中提到的漏洞位置及详细信息
[user input end]
[result]
anal
注意严格根据上述指示进行输出，只输出manu、auto或anal，除了manu、auto或anal其余任何内容都不要输出。输出完之后立刻终止输出，不要再输出任何字符。以上为给你的工作范例，以下为真实应用场景:
[user input]
{$userinput$}
[user input end]

[result]
"""
class checker:
    def __init__(self) -> None:
        # self.bot = WenxinBot()
        self.bot = QwenBot()
        # self.bot.get_access_token()
        self.prompt_template = PROMPT
    def make_prompt(self, query):
        prompt = self.prompt_template.replace("{$userinput$}",query)
        return prompt
    def query2bot(self, query):
        query = self.make_prompt(query)
        return self.bot.send_message(query)

if __name__ == '__main__':
    p = checker()
    p.query2bot("你好")
    p.query2bot('检查127.0.0.1上是否存在sql注入问题')